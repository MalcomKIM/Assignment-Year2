Extras:
Requirement 1: Verify sender address. Java's System-class contains information about the username and the InetAddress-class contains methods for finding the name of the local host. Use these to construct the sender address for the Envelope instead of using the user-supplied value in the From-header.
Explanation:
To Satisfy this requirement, we set two private global variables “user_name” (String object) and “IPaddress” (InetAddress object) in the main class (“EmailClient” class) to obtain the username and IP address in the main method using “getProperty()” and “getLocalHost()” methods. Then back to the initialization of the attributes in “EmailClient” class, enter “user_name+’@’ +IPaddress” in the “fromField” (TextField) so the verified sender address will be the default value in the “From” text field as the project runs. 

Requirement 2: Additional headers. The generated mails have only four header fields, From, To, Subject, and Date. Add other header fields from RFC 822, e.g., Message-ID, Keywords. Check the RFC for the definitions of the different fields.
•	For example try to set MIME headers to include the "Content-Type" specified in the downloaded object also in the E-mail. On a HTML enabled email client, you can then see an intepreted html file, not just the source.
•	At the moment you can only download and send ASCII files. Use some encoding to do the same for binary files, e.g. jpg-images. Again MIME headers can help you.
Explanation:
To add additional headers to the generated emails, we add a “content-type” header to the mail in the “EmailMessage” class (inside the constructor) and then write get method in “HttpInteract” class to get the content type of the content provided by the given urls. A “content_type” string was created in “EmailClient” class and then the default content type was set as “text/plain”. In “GetListener” class, “request” (HttpInteract object) can get the content type of the generated content when sending the http request and then assign value to “content_type”. A set method named as “setContent_type()” was written in “EmailMessage” class thus the “content_type” string will be able to be passed to the “EmailMessage” objects and then particular content type will be identified by MailCatcher and displayed in the correct way.

Requirement 3: Multiple recipients. Currently the program only allows sending mail to a single recipient. Modify the user interface to include a Cc-field and modify the program to send mail to both recipients. For a more challenging exercise, modify the program to send mail to an arbitrary number of recipients.
Explanation:
To realize the multiple recipients function, we create a new “Cc” box in the user interface to hold the address to other destination. (Achieved by create “CcPanel”, “CcField” and then add to the “fieldPanel”). Afterwards, a new “EmailMessage” object named as “CcEmailMessage” was created to send email message to the required Cc addresses (judge whether the “CcField” is empty or not, if empty then the send email operation will be cancelled). 

Requirement 4: Follow Redirections If the http server replies with a 301 or 302 status code then extract new location of object from the header or body of the reply and download object from there. Change also the URL field in the EmailClient accordingly. 
Explanation: 
Firstly, in the “HttpInteract” class, we checked the status line from the server then we extract the status code from the status line. If status code is “301” or ”302” then the new location (variable name as “newurl”) from the response header will be extracted. A get method named “getStatusCode()” was created in the “HttpInteract” class to provide the status code to the other classes. If the status code from server is “301” or ”302”, “receivedText” (in “EmailClient” class, used to hold the body message) actually holds the new url for the redirected location. Then the text of “urlField” will be updated to the new url. This process will be repeated until the status code is not “301” or ”302” and the final file from the new location can be acquired.

